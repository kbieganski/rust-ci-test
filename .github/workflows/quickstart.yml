# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
#
# While our "example" application has the platform-specific code,
# for simplicity we are compiling and testing everything on the Ubuntu environment only.
# For multi-OS testing see the `cross.yml` workflow.

on: [push, pull_request]

name: Quickstart

jobs:
  matrix:
    name: Generate job matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install `cargo-feature-combinations`
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-feature-combinations
          version: latest

      - name: Generate job matrix
        id: matrix
        run: echo "::set-output name=matrix::{\"include\":$(cargo feature-combinations matrix)}"

  check:
    name: Check ${{ matrix.name }} (${{ matrix.features }})
    needs: matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        continue-on-error: true  # WARNING: only for this example, remove it!
        with:
          command: check --all-targets --package ${{ matrix.name }} --features ${{ matrix.features }}

  test:
    name: Test ${{ matrix.package.name }} (${{ matrix.package.features }}) on ${{ matrix.platform }}
    needs: matrix
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        package: ${{ fromJson(needs.matrix.outputs.matrix) }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run `cargo test`
        uses: actions-rs/cargo@v1
        continue-on-error: true  # WARNING: only for this example, remove it!
        with:
          command: test --package ${{ matrix.package.name }} --features ${{ matrix.package.features }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: Run `cargo clippy`
        uses: actions-rs/clippy-check@v1
        continue-on-error: true  # WARNING: only for this example, remove it!
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --all-features -- -D warnings

  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: Run `cargo fmt`
        uses: actions-rs/cargo@v1
        continue-on-error: true  # WARNING: only for this example, remove it!
        with:
          command: fmt
          args: --all -- --check

