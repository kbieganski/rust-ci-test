name: Check

on: [workflow_call]

jobs:
  general:
    name: General
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        run: rustup update

      - name: Setup cache
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-deny
        run: cargo install cargo-deny

      - name: Formatting
        run: cargo fmt --all -- --check

      - name: Audit
        run: cargo deny --color always --all-features check
        if: ${{ success() || failure() }}
        continue-on-error: true  # TODO: remove

  platform:
    name: ${{ matrix.platform.pretty-name }} | ${{ matrix.toolchain }}
    strategy:
      matrix:
        platform: [{id: ubuntu-latest, pretty-name: Linux},
                   {id: macos-latest, pretty-name: macOS},
                   {id: windows-latest, pretty-name: Windows}]
        toolchain: [stable, nightly]
      fail-fast: false
    runs-on: ${{ matrix.platform.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        run: |
          rustup install ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}

      - name: Setup cache
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-hack
        run: cargo install cargo-hack

      - name: Check
        run: cargo hack --workspace --feature-powerset --color always check

      - name: Lint
        run: cargo hack --workspace --feature-powerset --color always clippy --no-deps -- -D warnings
        if: ${{ success() || failure() }}
        continue-on-error: true  # TODO: remove

      - name: Miri
        run: |
          rustup component add miri
          cargo miri test --workspace --all-features --color always
        if: ${{ (success() || failure()) && matrix.toolchain == 'nightly' }}
        env:
          RUSTFLAGS: -A warnings
          MIRIFLAGS: -Zmiri-disable-isolation
