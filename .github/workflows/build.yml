name: Build

on:
  push:
    branches: [main, master] #TODO: fix
    tags-ignore: ["[0-9]+.[0-9]+*"]
  workflow_call:

env:
  EXECUTABLE: example

jobs:
  test:
    name: Check & Test
    uses: ./.github/workflows/test.yml

  linux:
    name: Linux | ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        run: |
          rustup update
          rustup target add ${{ matrix.target }}-unknown-linux-gnu

      - name: Setup cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: |
          cargo run --release --target ${{ matrix.target }}
          mv target/${{ matrix.target }}-unknown-linux-gnu/release/${{ env.EXECUTABLE }} .

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: |
            ${{ env.EXECUTABLE }}
            README.md
            LICENSE
          name: linux-${{ matrix.target }}

  macos:
    name: macOS | ${{ matrix.target }}
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        run: |
          rustup update
          rustup target add ${{ matrix.target }}-apple-darwin

      - name: Setup cache
        uses: Swatinem/rust-cache@v2

      - name: Build (Apple Silicon)
        run: |
          SDKROOT=$(xcrun -sdk macosx --show-sdk-path) \
            MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx --show-sdk-platform-version) \
            cargo build --release --target ${{ matrix.target }}-apple-darwin

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: |
            ${{ env.EXECUTABLE }}
            README.md
            LICENSE
          name: macos-${{ matrix.target }}

  macos-universal:
    name: macOS | Universal Binary
    runs-on: macos-latest
    needs: macos

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download
        uses: actions/download-artifact@v3
        with:
          path: ./builds

      - name: Universal Binary
        run: |
          lipo -create -output ${{ env.EXECUTABLE }} \
            builds/macos-aarch64/${{ env.EXECUTABLE }} \
            builds/macos-x86_64/${{ env.EXECUTABLE }}

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: |
            ${{ env.EXECUTABLE }}
            README.md
            LICENSE
          name: macos-universal

  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      matrix:
        target: [gnu, msvc]
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        run: |
          rustup update
          rustup target add x86-64-pc-windows-${{ matrix.target }}

      - name: Setup cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: |
          cargo build --release --target x86_64-pc-windows-${{ matrix.target }}
          mv target/x86_64-pc-windows-${{ matrix.target }}/release/${{ env.EXECUTABLE }}.exe .

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: |
            ${{ env.EXECUTABLE }}.exe
            README.md
            LICENSE
          name: win-${{ matrix.target }}
